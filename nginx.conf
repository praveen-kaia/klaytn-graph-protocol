http {
    include       mime.types;
    # fallback in case we can't determine a type
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    upstream graph-node-http {
      ip_hash;  # For load-balancing
      server graph-node:8000 fail_timeout=0;
      #
      # fail_timeout=0 means we always retry an upstream even if it failed
      # to return a good HTTP response
      keepalive 32;
    }
  
    server {
      listen ;

      location /graph/http {
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_set_header    X-Forwarded-Proto   $scheme;
          proxy_set_header    Host                $host;
          # we don't want nginx trying to do something clever with
          # redirects, we set the Host: header above already.
          proxy_redirect off;
          proxy_pass http://graph-node-http/;

          proxy_set_header X-Forwarded-Host $server_name;
          proxy_set_header X-Real-IP $remote_addr;
          add_header       Front-End-Https   on;
      }
    }
}
